const backendBase = 'http://localhost:4000';

export async function request (
	method,
	url,
	{ headers = {}, data, fetch = window && window.fetch, type = 'json' } = {}
) {
	let reqOptions = { method, headers };
	if (data) {
		if (data instanceof FormData) {
			reqOptions.headers["content-type"] = "multipart/form-data";
			reqOptions.body = data;
		} else {
			reqOptions.headers["content-type"] = "application/json";
			reqOptions.body = JSON.stringify(data);
		}
	}
	let response;
	try {
		console.log(url, reqOptions);
		response = await fetch(url, reqOptions);
		if (Math.floor(response.status / 100) !== 2) {
			throw new Error(
				`API request failed! - ${response.status}: ${response.statusText}`
			);
		}
		return response[type]();
	} catch (error) {
		error.jsonMessage = await response.clone().json();
		// logError(error, error.stack);
		throw error;
	}
}

export const getNextIds = (userId, chunkSize) => request(
	'post',
	`${backendBase}/next_ids`,
	{
		data: {
			userId,
			chunkSize
		}
	}
);

export const getOrgById = orgId => request(
	'get',
	`${backendBase}/orgs/${orgId}`
);

export const getNextOrg = userId => request(
	'post',
	`${backendBase}/next_org`,
	{
		data: {
			userId
		}
	}
);

export const sendEvaluations = ({userEmail}, orgId, evaluations) => request(
	'post',
	`${backendBase}/eval/${orgId}`,
	{
		data: 	{
			userId: userEmail,
			topics: evaluations
		}
	}
);

// From http://emailregex.com
// eslint-disable-next-line no-control-regex
export const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/ui;
