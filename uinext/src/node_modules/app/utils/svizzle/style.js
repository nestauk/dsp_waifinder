import {isIterableNotEmpty, trim} from '@svizzle/utils';
import * as _ from 'lamb';

const parseCssText = _.pipe([
	_.splitBy(';'),
	_.filterWith(isIterableNotEmpty),
	_.mapWith(_.pipe([
		_.splitBy(':'),
		_.mapWith(trim)
	]))
]);

export const getStylesheet = pHref => _.find(
	[...document.styleSheets],
	_.hasKeyValue('href', pHref)
);

export const makeGetStyleRulesObj = selectorRegex => _.pipe([
	_.filterWith(_.pipe([
		_.getKey('selectorText'),
		selectorRegex.test.bind(selectorRegex)
	])),
	_.mapWith(_.collect([
		_.getKey('selectorText'),
		_.pipe([
			_.getPath('style.cssText'),
			parseCssText,
			_.fromPairs
		])
	])),
	_.fromPairs
]);
