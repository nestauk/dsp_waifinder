import {isIterableNotEmpty, trim} from '@svizzle/utils';
import * as _ from 'lamb';

const makeSplitAndTrim = separator => _.pipe([
	_.splitBy(separator),
	_.mapWith(trim)
]);

const parseCssText = _.pipe([
	_.splitBy(';'),
	_.filterWith(isIterableNotEmpty),
	_.mapWith(makeSplitAndTrim(':'))
]);

export const getStylesheet = pHref => _.find(
	[...document.styleSheets],
	_.hasKeyValue('href', pHref)
);

export const makeGetStyleRulesObj = selectorRegex => _.pipe([
	_.filterWith(_.pipe([
		_.getKey('selectorText'),
		makeSplitAndTrim(','),
		_.some(selectorRegex.test.bind(selectorRegex))
	])),
	_.mapWith(_.collect([
		_.getKey('selectorText'),
		_.pipe([
			_.getPath('style.cssText'),
			parseCssText,
			_.fromPairs
		])
	])),
	_.fromPairs
]);
