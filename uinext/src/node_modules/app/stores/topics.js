import {get, writable} from 'svelte/store';

import {MIN_SCORE} from 'app/config';

import {fetchEntityDetail} from 'app/utils/dbpedia';
import {getTopicLabel} from 'app/utils/dataUtils';

const topicsCache = {};

export const _minScore = writable(MIN_SCORE);

export const _activeTopicDetails = writable();

export const asyncUpdateTopicDetails = async id => {

	/* inform consumers data is loading */

	_activeTopicDetails.set({
		id,
		isLoading: true
	});

	/* get it from cache or fetch it and cache it */

	let topicDetails =  topicsCache[id];
	if (!topicDetails) {
		topicDetails = {
			id,
			label: getTopicLabel(id),
			...await fetchEntityDetail(id)
		};
		topicsCache[id] = topicDetails;
	}

	/* assign details */

	const currentTopicDetails = get(_activeTopicDetails);
	if (id === currentTopicDetails?.id) {
		_activeTopicDetails.set(topicDetails);
	}
}

export const clearActiveTopic = () => {
	_activeTopicDetails.set(null);
}
