import * as _ from 'lamb';
import {derived, get, writable} from 'svelte/store';

import {_dataset} from 'app/stores/dataset';

export const _focusedOrgId = writable(null);
export const _focusedOrg = derived(
	[_dataset, _focusedOrgId],
	([dataset, focusedOrgId]) => dataset.orgsById[focusedOrgId]
);

export const _heroMarkerId = writable(null);
export const _heroMarker = derived(
	[_dataset, _heroMarkerId],
	([dataset, heroMarkerId]) => {
		if (heroMarkerId) {
			return {
				org: dataset.orgsById[heroMarkerId?.id],
				isPinned: heroMarkerId?.isPinned | false
			}
		}
		return null;
	}
);

export const clearHeroMarker = () => {
	_heroMarkerId.set(null);
}

export const clearStores = () => {
	_focusedOrgId.set(null);
	_heroMarkerId.update(id => id.isPinned ? id : null);
}

export const _orgBannerFooter = writable();
