/*
import {assign, send} from 'xstate';
import {get} from 'svelte/store';
import {negate} from '@svizzle/utils';
*/
import * as _ from 'lamb';
import {toggleItem} from '@svizzle/utils';
import {assign, send } from 'xstate/lib/actions';

export default {
	toggleOrgType: assign(({selectedOrgTypes}, {id}) => ({
		selectedOrgTypes: _.sort(toggleItem(selectedOrgTypes, id))
	})),
	sendCommitted: send('COMMITTED'),
	sendEdited: send('EDITED'),
	/*
	setParsingDone: assign(ctx => {
		ctx.isParsing.set(false);
		return ctx;
	}),
	sendTreeChanged: send('TREE_CHANGED', {
		to: (ctx, event) => {
			const forms = get(ctx.forms);
			const form = forms.find(f => f.id === event.formId);
			const subForm = forms[get(form.machine).context.arrayIndex + 1];
			return subForm ? subForm.id : undefined;
		}
	}),
	toggleHideDisabledFields: ctx => ctx.hideDisabledFields.update(negate),
	*/
};
