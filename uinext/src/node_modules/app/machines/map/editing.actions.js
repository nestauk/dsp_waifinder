/*
import { assign, send } from 'xstate';
import { get } from 'svelte/store';
import { negate } from '@svizzle/utils';
*/

import {toggleOrgType} from 'app/stores/selection';
import {assign} from 'svelte/internal';

export default {
	toggleOrgType: assign((ctx, {id}) => {
		console.log('toggle', ctx, event)
		toggleOrgType(id);
		return ctx;
	})
	/*
	setParsingDone: assign(ctx => {
		ctx.isParsing.set(false);
		return ctx;
	}),
	sendTreeChanged: send('TREE_CHANGED', {
		to: (ctx, event) => {
			const forms = get(ctx.forms);
			const form = forms.find(f => f.id === event.formId);
			const subForm = forms[get(form.machine).context.arrayIndex + 1];
			return subForm ? subForm.id : undefined;
		}
	}),
	toggleHideDisabledFields: ctx => ctx.hideDisabledFields.update(negate),
	*/
};
